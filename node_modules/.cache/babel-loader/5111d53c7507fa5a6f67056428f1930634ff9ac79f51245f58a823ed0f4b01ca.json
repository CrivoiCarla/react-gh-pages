{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carla\\\\Desktop\\\\New folder - Copy\\\\my-react-app\\\\src\\\\components\\\\Roulette.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../css/R\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Roulette = () => {\n  _s();\n  const [result, setResult] = useState(null);\n  const [spinning, setSpinning] = useState(false);\n  const wheelSegments = [{\n    value: 10,\n    text: \"10x\"\n  }, {\n    value: 0,\n    text: \"Nu ai castigat\"\n  }, {\n    value: 2,\n    text: \"2x\"\n  }, {\n    value: 0,\n    text: \"Nu ai castigat\"\n  }, {\n    value: 1,\n    text: \"1x\"\n  }, {\n    value: 15,\n    text: \"15x\"\n  }, {\n    value: 0,\n    text: \"Nu ai castigat\"\n  }, {\n    value: 0,\n    text: \"Nu ai castigat\"\n  }];\n  const handleSpin = () => {\n    setSpinning(true);\n    setResult(null);\n    setTimeout(() => {\n      const randomResult = Math.floor(Math.random() * wheelSegments.length);\n      setResult(wheelSegments[randomResult]);\n      setSpinning(false);\n    }, 5000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Roulette\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `roulette ${spinning ? \"spinning\" : \"\"}`,\n      children: [result !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result\",\n        children: result.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"placeholder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wheel\",\n        children: wheelSegments.map((segment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"segment\",\n          style: {\n            transform: `rotate(${index * (360 / wheelSegments.length)}deg) skewY(-15deg)`,\n            backgroundColor: index % 2 === 0 ? \"#f00\" : \"#000\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"segment-text\",\n            children: segment.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: spinning,\n      onClick: handleSpin,\n      children: spinning ? \"Spinning...\" : \"Spin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Roulette, \"Jvvhdc4SKTiG3GWI7qE9AcfVgPs=\");\n_c = Roulette;\nexport default Roulette;\nvar _c;\n$RefreshReg$(_c, \"Roulette\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Roulette","_s","result","setResult","spinning","setSpinning","wheelSegments","value","text","handleSpin","setTimeout","randomResult","Math","floor","random","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","segment","index","style","transform","backgroundColor","disabled","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Roulette.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../css/R\";\r\n\r\nconst Roulette = () => {\r\n  const [result, setResult] = useState(null);\r\n  const [spinning, setSpinning] = useState(false);\r\n\r\n  const wheelSegments = [\r\n    { value: 10, text: \"10x\" },\r\n    { value: 0, text: \"Nu ai castigat\" },\r\n    { value: 2, text: \"2x\" },\r\n    { value: 0, text: \"Nu ai castigat\" },\r\n    { value: 1, text: \"1x\" },\r\n    { value: 15, text: \"15x\" },\r\n    { value: 0, text: \"Nu ai castigat\" },\r\n    { value: 0, text: \"Nu ai castigat\" },\r\n  ];\r\n\r\n  const handleSpin = () => {\r\n    setSpinning(true);\r\n    setResult(null);\r\n    setTimeout(() => {\r\n      const randomResult = Math.floor(Math.random() * wheelSegments.length);\r\n      setResult(wheelSegments[randomResult]);\r\n      setSpinning(false);\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Roulette</h1>\r\n      <div className={`roulette ${spinning ? \"spinning\" : \"\"}`}>\r\n        {result !== null ? (\r\n          <div className=\"result\">{result.text}</div>\r\n        ) : (\r\n          <div className=\"placeholder\"></div>\r\n        )}\r\n        <div className=\"wheel\">\r\n          {wheelSegments.map((segment, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"segment\"\r\n              style={{\r\n                transform: `rotate(${index * (360 / wheelSegments.length)}deg) skewY(-15deg)`,\r\n                backgroundColor: index % 2 === 0 ? \"#f00\" : \"#000\",\r\n              }}\r\n            >\r\n              <div className=\"segment-text\">{segment.text}</div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <button disabled={spinning} onClick={handleSpin}>\r\n        {spinning ? \"Spinning...\" : \"Spin\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Roulette;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMS,aAAa,GAAG,CACpB;IAAEC,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAM,CAAC,EAC1B;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACpC;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACxB;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACpC;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAK,CAAC,EACxB;IAAED,KAAK,EAAE,EAAE;IAAEC,IAAI,EAAE;EAAM,CAAC,EAC1B;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,EACpC;IAAED,KAAK,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,CACrC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBJ,WAAW,CAAC,IAAI,CAAC;IACjBF,SAAS,CAAC,IAAI,CAAC;IACfO,UAAU,CAAC,MAAM;MACf,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGR,aAAa,CAACS,MAAM,CAAC;MACrEZ,SAAS,CAACG,aAAa,CAACK,YAAY,CAAC,CAAC;MACtCN,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACjBrB,OAAA;MAAKsB,SAAS,EAAG,YAAWjB,QAAQ,GAAG,UAAU,GAAG,EAAG,EAAE;MAAAY,QAAA,GACtDd,MAAM,KAAK,IAAI,gBACdH,OAAA;QAAKsB,SAAS,EAAC,QAAQ;QAAAL,QAAA,EAAEd,MAAM,CAACM;MAAI;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,gBAE3CrB,OAAA;QAAKsB,SAAS,EAAC;MAAa;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC7B,eACDrB,OAAA;QAAKsB,SAAS,EAAC,OAAO;QAAAL,QAAA,EACnBV,aAAa,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAChCzB,OAAA;UAEEsB,SAAS,EAAC,SAAS;UACnBI,KAAK,EAAE;YACLC,SAAS,EAAG,UAASF,KAAK,IAAI,GAAG,GAAGlB,aAAa,CAACS,MAAM,CAAE,oBAAmB;YAC7EY,eAAe,EAAEH,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,MAAM,GAAG;UAC9C,CAAE;UAAAR,QAAA,eAEFjB,OAAA;YAAKsB,SAAS,EAAC,cAAc;YAAAL,QAAA,EAAEO,OAAO,CAACf;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAO,GAP7CI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QASb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACF,eACNrB,OAAA;MAAQ6B,QAAQ,EAAExB,QAAS;MAACyB,OAAO,EAAEpB,UAAW;MAAAO,QAAA,EAC7CZ,QAAQ,GAAG,aAAa,GAAG;IAAM;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAC3B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEV,CAAC;AAACnB,EAAA,CAtDID,QAAQ;AAAA8B,EAAA,GAAR9B,QAAQ;AAwDd,eAAeA,QAAQ;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}