{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carla\\\\Desktop\\\\New folder - Copy\\\\my-react-app\\\\src\\\\components\\\\Graph.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport Chart from \"chart.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Graph = _ref => {\n  _s();\n  let {\n    data\n  } = _ref;\n  const chartRef = useRef();\n  useEffect(() => {\n    if (data.length && chartRef.current) {\n      const ctx = chartRef.current.getContext(\"2d\");\n      new Chart(ctx, {\n        type: \"line\",\n        data: {\n          labels: data.map((_, i) => i),\n          datasets: [{\n            label: \"Suma\",\n            data,\n            fill: false,\n            borderColor: \"#2c3e50\"\n          }]\n        }\n      });\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: chartRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n};\n_s(Graph, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Graph","_ref","_s","data","chartRef","length","current","ctx","getContext","type","labels","map","_","i","datasets","label","fill","borderColor","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Graph.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\r\nimport Chart from \"chart.js\";\r\n\r\nconst Graph = ({ data }) => {\r\n  const chartRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (data.length && chartRef.current) {\r\n      const ctx = chartRef.current.getContext(\"2d\");\r\n      new Chart(ctx, {\r\n        type: \"line\",\r\n        data: {\r\n          labels: data.map((_, i) => i),\r\n          datasets: [\r\n            {\r\n              label: \"Suma\",\r\n              data,\r\n              fill: false,\r\n              borderColor: \"#2c3e50\",\r\n            },\r\n          ],\r\n        },\r\n      });\r\n    }\r\n  }, [data]);\r\n\r\n  return <canvas ref={chartRef} />;\r\n};\r\n\r\nexport default Graph;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGC,IAAA,IAAc;EAAAC,EAAA;EAAA,IAAb;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACrB,MAAMG,QAAQ,GAAGR,MAAM,EAAE;EAEzBD,SAAS,CAAC,MAAM;IACd,IAAIQ,IAAI,CAACE,MAAM,IAAID,QAAQ,CAACE,OAAO,EAAE;MACnC,MAAMC,GAAG,GAAGH,QAAQ,CAACE,OAAO,CAACE,UAAU,CAAC,IAAI,CAAC;MAC7C,IAAIX,KAAK,CAACU,GAAG,EAAE;QACbE,IAAI,EAAE,MAAM;QACZN,IAAI,EAAE;UACJO,MAAM,EAAEP,IAAI,CAACQ,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAC;UAC7BC,QAAQ,EAAE,CACR;YACEC,KAAK,EAAE,MAAM;YACbZ,IAAI;YACJa,IAAI,EAAE,KAAK;YACXC,WAAW,EAAE;UACf,CAAC;QAEL;MACF,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACd,IAAI,CAAC,CAAC;EAEV,oBAAOJ,OAAA;IAAQmB,GAAG,EAAEd;EAAS;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAG;AAClC,CAAC;AAACpB,EAAA,CAxBIF,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}