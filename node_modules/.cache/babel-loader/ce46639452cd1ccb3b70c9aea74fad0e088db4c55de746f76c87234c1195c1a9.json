{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carla\\\\Desktop\\\\New folder - Copy\\\\my-react-app\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Login = props => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  //const navigate = useNavigate(); // Utilizați hook-ul useNavigate pentru a redirecționa utilizatorul\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // Verifică în consolă datele trimise\n      console.log(\"Datele trimise:\", {\n        email,\n        password\n      });\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"text/plain\");\n      const requestOptions = {\n        method: \"POST\",\n        headers: {\n          'Origin': \"https://pacanele.herokuapp.com\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      };\n      const response = await fetch(\"https://pacanelephp.herokuapp.com/v1/login\", requestOptions);\n      const data = await response.text();\n      //console.log(data);\n\n      if (response.ok) {\n        console.log(\"User logged in successfully\");\n        localStorage.setItem(\"userData\", JSON.stringify(data));\n        // Redirecționează către pagina de profil\n        window.location.href = \"/profile\";\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"auth-form-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Te-ai logat cu succes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/profile\",\n            className: \"link-btn\",\n            children: \"Your profile here.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this);\n      } else {\n        console.log(\"Invalid email or password\");\n        // afișează mesajul de eroare\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        type: \"email\",\n        placeholder: \"youremail@gmail.com\",\n        id: \"email\",\n        name: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        type: \"password\",\n        placeholder: \"********\",\n        id: \"password\",\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/register\",\n      className: \"link-btn\",\n      children: \"Don't have an account? Register here.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"TSZhDBNy8CmbxXgprY/vvMmTG1Q=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","Login","props","_s","email","setEmail","password","setPassword","handleSubmit","e","preventDefault","console","log","myHeaders","Headers","append","requestOptions","method","headers","body","JSON","stringify","response","fetch","data","text","ok","localStorage","setItem","window","location","href","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","to","error","onSubmit","value","onChange","target","type","placeholder","id","name","_c","$RefreshReg$"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Login = (props) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  //const navigate = useNavigate(); // Utilizați hook-ul useNavigate pentru a redirecționa utilizatorul\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // Verifică în consolă datele trimise\r\n      console.log(\"Datele trimise:\", { email, password });\r\n\r\n      var myHeaders = new Headers();\r\n      myHeaders.append(\"Content-Type\", \"text/plain\");\r\n      const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Origin': \"https://pacanele.herokuapp.com\",\r\n        },\r\n        body: JSON.stringify({ email, password })\r\n      };\r\n\r\n      const response = await fetch(\r\n        \"https://pacanelephp.herokuapp.com/v1/login\",\r\n        requestOptions\r\n      );\r\n\r\n      const data = await response.text();\r\n      //console.log(data);\r\n\r\n      if (response.ok) {\r\n        console.log(\"User logged in successfully\");\r\n        localStorage.setItem(\"userData\", JSON.stringify(data));\r\n       // Redirecționează către pagina de profil\r\n       window.location.href = \"/profile\";\r\n       return (\r\n        <div className=\"auth-form-container\">\r\n          <label htmlFor=\"email\">Te-ai logat cu succes</label>\r\n          <Link to=\"/profile\" className=\"link-btn\">Your profile here.</Link>\r\n        </div>\r\n      )\r\n\r\n\r\n      } else {\r\n        console.log(\"Invalid email or password\");\r\n        // afișează mesajul de eroare\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"auth-form-container\">\r\n      <h2>Login</h2>\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <input value={email} onChange={(e) => setEmail(e.target.value)} type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n        <button type=\"submit\">Log In</button>\r\n      </form>\r\n      <Link to=\"/register\" className=\"link-btn\">Don't have an account? Register here.</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}