{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carla\\\\Desktop\\\\New folder - Copy\\\\my-react-app\\\\src\\\\components\\\\Crash.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import \"../css/Crash.css\";\n\n// const Crash = () => {\n//   const [currentBet, setCurrentBet] = useState(0);\n//   const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\n//   const [crashMultiplier, setCrashMultiplier] = useState(0);\n\n//   const handleBetChange = (event) => {\n//     setCurrentBet(parseInt(event.target.value));\n//   };\n\n//   const startGame = () => {\n//     setGameState(\"playing\");\n//     const randomMultiplier = Math.floor(Math.random() * 500) / 100 + 1;\n//     setCrashMultiplier(randomMultiplier);\n//     setTimeout(() => {\n//       setGameState(\"crashed\");\n//     }, 3000);\n//   };\n\n//   const resetGame = () => {\n//     setCurrentBet(0);\n//     setGameState(\"waiting\");\n//     setCrashMultiplier(0);\n//   };\n\n//   return (\n//     <div className=\"crash-container\">\n//       <h1 className=\"crash-title\">Crash</h1>\n//       <div className=\"crash-info\">\n//         <p>Current bet: {currentBet} bits</p>\n//         {gameState === \"waiting\" ? (\n//           <button className=\"crash-button\" onClick={startGame}>\n//             Start game\n//           </button>\n//         ) : (\n//           <p>Game state: {gameState}</p>\n//         )}\n//         {gameState === \"crashed\" && (\n//           <div>\n//             <p>Crash multiplier: {crashMultiplier.toFixed(2)}</p>\n//             <p>Win: {currentBet * crashMultiplier} bits</p>\n//             <button className=\"crash-button\" onClick={resetGame}>\n//               Play again\n//             </button>\n//           </div>\n//         )}\n//         {gameState === \"playing\" && (\n//           <div>\n//             <p>Multiplier: {crashMultiplier.toFixed(2)}</p>\n//             <button className=\"crash-button\" onClick={() => setGameState(\"crashed\")}>\n//               Cash out\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//       <div className=\"crash-bets\">\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10)}>\n//           +10\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 100)}>\n//           +100\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 1000)}>\n//           +1000\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10000)}>\n//           +10000\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(0)}>\n//           Clear\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Crash;\nimport React, { useState, useEffect } from \"react\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport Rocket from \"./Rocket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Crash = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\n  const [currentBet, setCurrentBet] = useState(0);\n  const [crashMultiplier, setCrashMultiplier] = useState(1);\n  const updateData = () => {\n    setData(prevData => {\n      const newData = [...prevData];\n      const lastPoint = newData[newData.length - 1] || {\n        x: 0,\n        y: 1\n      };\n      const nextPoint = {\n        x: lastPoint.x + 1,\n        y: lastPoint.y * (1 + Math.random() * 0.02) // Aici puteți ajusta coeficientul de creștere\n      };\n\n      newData.push(nextPoint);\n      return newData;\n    });\n  };\n  const startGame = () => {\n    setData([{\n      x: 0,\n      y: 1\n    }]);\n    setIsRunning(true);\n    setGameState(\"playing\");\n  };\n  const cashOut = () => {\n    setIsRunning(false);\n    setGameState(\"crashed\");\n  };\n  const resetGame = () => {\n    setCurrentBet(0);\n    setGameState(\"waiting\");\n    setCrashMultiplier(1);\n  };\n  useEffect(() => {\n    if (isRunning) {\n      const interval = setInterval(() => {\n        updateData();\n      }, 100); // Aici puteți ajusta viteza de actualizare a graficului (în milisecunde)\n      return () => clearInterval(interval);\n    }\n  }, [isRunning]);\n  useEffect(() => {\n    const lastPoint = data[data.length - 1] || {\n      x: 0,\n      y: 1\n    };\n    setCrashMultiplier(lastPoint.y);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Crash\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Current bet: \", currentBet, \" bits\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), gameState === \"waiting\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this), gameState === \"playing\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cashOut,\n        children: \"Cash out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 300,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"y\",\n            stroke: \"#8884d8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), gameState === \"crashed\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Crash multiplier: \", crashMultiplier.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Win: \", currentBet * crashMultiplier, \" bits\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Play again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"crash-bets\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crash-bet\",\n        onClick: () => setCurrentBet(currentBet + 10),\n        children: \"+10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crash-bet\",\n        onClick: () => setCurrentBet(currentBet + 100),\n        children: \"+100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crash-bet\",\n        onClick: () => setCurrentBet(currentBet + 1000),\n        children: \"+1000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crash-bet\",\n        onClick: () => setCurrentBet(currentBet + 10000),\n        children: \"+10000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"crash-bet\",\n        onClick: () => setCurrentBet(0),\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Crash, \"EQEMUxF+U3VdrHqxX3Mor41k43I=\");\n_c = Crash;\nexport default Crash;\nvar _c;\n$RefreshReg$(_c, \"Crash\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","Rocket","jsxDEV","_jsxDEV","Fragment","_Fragment","Crash","_s","data","setData","isRunning","setIsRunning","gameState","setGameState","currentBet","setCurrentBet","crashMultiplier","setCrashMultiplier","updateData","prevData","newData","lastPoint","length","x","y","nextPoint","Math","random","push","startGame","cashOut","resetGame","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","width","height","strokeDasharray","dataKey","type","stroke","toFixed","className","_c","$RefreshReg$"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Crash.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../css/Crash.css\";\r\n\r\n// const Crash = () => {\r\n//   const [currentBet, setCurrentBet] = useState(0);\r\n//   const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\r\n//   const [crashMultiplier, setCrashMultiplier] = useState(0);\r\n\r\n//   const handleBetChange = (event) => {\r\n//     setCurrentBet(parseInt(event.target.value));\r\n//   };\r\n\r\n//   const startGame = () => {\r\n//     setGameState(\"playing\");\r\n//     const randomMultiplier = Math.floor(Math.random() * 500) / 100 + 1;\r\n//     setCrashMultiplier(randomMultiplier);\r\n//     setTimeout(() => {\r\n//       setGameState(\"crashed\");\r\n//     }, 3000);\r\n//   };\r\n\r\n//   const resetGame = () => {\r\n//     setCurrentBet(0);\r\n//     setGameState(\"waiting\");\r\n//     setCrashMultiplier(0);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"crash-container\">\r\n//       <h1 className=\"crash-title\">Crash</h1>\r\n//       <div className=\"crash-info\">\r\n//         <p>Current bet: {currentBet} bits</p>\r\n//         {gameState === \"waiting\" ? (\r\n//           <button className=\"crash-button\" onClick={startGame}>\r\n//             Start game\r\n//           </button>\r\n//         ) : (\r\n//           <p>Game state: {gameState}</p>\r\n//         )}\r\n//         {gameState === \"crashed\" && (\r\n//           <div>\r\n//             <p>Crash multiplier: {crashMultiplier.toFixed(2)}</p>\r\n//             <p>Win: {currentBet * crashMultiplier} bits</p>\r\n//             <button className=\"crash-button\" onClick={resetGame}>\r\n//               Play again\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//         {gameState === \"playing\" && (\r\n//           <div>\r\n//             <p>Multiplier: {crashMultiplier.toFixed(2)}</p>\r\n//             <button className=\"crash-button\" onClick={() => setGameState(\"crashed\")}>\r\n//               Cash out\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"crash-bets\">\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10)}>\r\n//           +10\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 100)}>\r\n//           +100\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 1000)}>\r\n//           +1000\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10000)}>\r\n//           +10000\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(0)}>\r\n//           Clear\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Crash;\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\r\nimport Rocket from \"./Rocket\";\r\n\r\nconst Crash = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\r\n  const [currentBet, setCurrentBet] = useState(0);\r\n  const [crashMultiplier, setCrashMultiplier] = useState(1);\r\n\r\n  const updateData = () => {\r\n    setData((prevData) => {\r\n      const newData = [...prevData];\r\n      const lastPoint = newData[newData.length - 1] || { x: 0, y: 1 };\r\n      const nextPoint = {\r\n        x: lastPoint.x + 1,\r\n        y: lastPoint.y * (1 + Math.random() * 0.02), // Aici puteți ajusta coeficientul de creștere\r\n      };\r\n      newData.push(nextPoint);\r\n      return newData;\r\n    });\r\n  };\r\n\r\n  const startGame = () => {\r\n    setData([{ x: 0, y: 1 }]);\r\n    setIsRunning(true);\r\n    setGameState(\"playing\");\r\n  };\r\n\r\n  const cashOut = () => {\r\n    setIsRunning(false);\r\n    setGameState(\"crashed\");\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setCurrentBet(0);\r\n    setGameState(\"waiting\");\r\n    setCrashMultiplier(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (isRunning) {\r\n      const interval = setInterval(() => {\r\n        updateData();\r\n      }, 100); // Aici puteți ajusta viteza de actualizare a graficului (în milisecunde)\r\n      return () => clearInterval(interval);\r\n    }\r\n  }, [isRunning]);\r\n\r\n  useEffect(() => {\r\n    const lastPoint = data[data.length - 1] || { x: 0, y: 1 };\r\n    setCrashMultiplier(lastPoint.y);\r\n  }, [data]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Crash</h1>\r\n      <p>Current bet: {currentBet} bits</p>\r\n      {gameState === \"waiting\" && (\r\n        <button onClick={startGame}>Start game</button>\r\n      )}\r\n      {gameState === \"playing\" && (\r\n        <>\r\n          <button onClick={cashOut}>Cash out</button>\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <LineChart data={data}>\r\n              <CartesianGrid strokeDasharray=\"3 3\" />\r\n              <XAxis dataKey=\"x\" />\r\n              <YAxis />\r\n              <Tooltip />\r\n              <Line type=\"monotone\" dataKey=\"y\" stroke=\"#8884d8\" />\r\n            </LineChart>\r\n          </ResponsiveContainer>\r\n        </>\r\n      )}\r\n      {gameState === \"crashed\" && (\r\n        <>\r\n                    <p>Crash multiplier: {crashMultiplier.toFixed(2)}</p>\r\n          <p>Win: {currentBet * crashMultiplier} bits</p>\r\n          <button onClick={resetGame}>Play again</button>\r\n        </>\r\n      )}\r\n\r\n      <div className=\"crash-bets\">\r\n        <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10)}>\r\n          +10\r\n        </button>\r\n        <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 100)}>\r\n          +100\r\n        </button>\r\n        <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 1000)}>\r\n          +1000\r\n        </button>\r\n        <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10000)}>\r\n          +10000\r\n        </button>\r\n        <button className=\"crash-bet\" onClick={() => setCurrentBet(0)}>\r\n          Clear\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Crash;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}