{"ast":null,"code":"// import React, { useState } from \"react\";\n\n// export const Register = (props) => {\n//     const [email, setEmail] = useState('');\n//     const [pass, setPass] = useState('');\n//     const [name, setName] = useState('');\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         console.log(email);\n//     }\n\n//     return (\n//         <div className=\"auth-form-container\">\n//             <h2>Register</h2>\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\n//             <label htmlFor=\"name\">Full name</label>\n//             <input value={name} name=\"name\" onChange={(e) => setName(e.target.value)} id=\"name\" placeholder=\"full Name\" />\n//             <label htmlFor=\"email\">email</label>\n//             <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\n//             <label htmlFor=\"password\">password</label>\n//             <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\n//             <button type=\"submit\">Log In</button>\n//         </form>\n//         <button className=\"link-btn\" onClick={() => props.onFormSwitch('login')}>Already have an account? Login here.</button>\n//     </div>\n//     )\n// }\n// export default Register;\n\nimport fs from 'fs';\nexport const registerUser = user => {\n  // Încarcăm fișierul JSON cu utilizatori\n  const users = JSON.parse(fs.readFileSync('users.json', 'utf8'));\n\n  // Verificăm dacă utilizatorul există deja în fișierul JSON\n  const existingUser = users.find(u => u.email === user.email);\n  if (existingUser) {\n    throw new Error('Utilizatorul există deja');\n  }\n\n  // Adăugăm utilizatorul în fișierul JSON\n  users.push(user);\n  fs.writeFileSync('users.json', JSON.stringify(users, null, 2));\n};","map":{"version":3,"names":["fs","registerUser","user","users","JSON","parse","readFileSync","existingUser","find","u","email","Error","push","writeFileSync","stringify"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Register.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n\r\n// export const Register = (props) => {\r\n//     const [email, setEmail] = useState('');\r\n//     const [pass, setPass] = useState('');\r\n//     const [name, setName] = useState('');\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         console.log(email);\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"auth-form-container\">\r\n//             <h2>Register</h2>\r\n//         <form className=\"register-form\" onSubmit={handleSubmit}>\r\n//             <label htmlFor=\"name\">Full name</label>\r\n//             <input value={name} name=\"name\" onChange={(e) => setName(e.target.value)} id=\"name\" placeholder=\"full Name\" />\r\n//             <label htmlFor=\"email\">email</label>\r\n//             <input value={email} onChange={(e) => setEmail(e.target.value)}type=\"email\" placeholder=\"youremail@gmail.com\" id=\"email\" name=\"email\" />\r\n//             <label htmlFor=\"password\">password</label>\r\n//             <input value={pass} onChange={(e) => setPass(e.target.value)} type=\"password\" placeholder=\"********\" id=\"password\" name=\"password\" />\r\n//             <button type=\"submit\">Log In</button>\r\n//         </form>\r\n//         <button className=\"link-btn\" onClick={() => props.onFormSwitch('login')}>Already have an account? Login here.</button>\r\n//     </div>\r\n//     )\r\n// }\r\n// export default Register;\r\n\r\nimport fs from 'fs';\r\n\r\nexport const registerUser = (user) => {\r\n  // Încarcăm fișierul JSON cu utilizatori\r\n  const users = JSON.parse(fs.readFileSync('users.json', 'utf8'));\r\n\r\n  // Verificăm dacă utilizatorul există deja în fișierul JSON\r\n  const existingUser = users.find((u) => u.email === user.email);\r\n  if (existingUser) {\r\n    throw new Error('Utilizatorul există deja');\r\n  }\r\n\r\n  // Adăugăm utilizatorul în fișierul JSON\r\n  users.push(user);\r\n  fs.writeFileSync('users.json', JSON.stringify(users, null, 2));\r\n};\r\n\r\n"],"mappings":"AAAA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,EAAE,MAAM,IAAI;AAEnB,OAAO,MAAMC,YAAY,GAAIC,IAAI,IAAK;EACpC;EACA,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,EAAE,CAACM,YAAY,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;;EAE/D;EACA,MAAMC,YAAY,GAAGJ,KAAK,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKR,IAAI,CAACQ,KAAK,CAAC;EAC9D,IAAIH,YAAY,EAAE;IAChB,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;EAC7C;;EAEA;EACAR,KAAK,CAACS,IAAI,CAACV,IAAI,CAAC;EAChBF,EAAE,CAACa,aAAa,CAAC,YAAY,EAAET,IAAI,CAACU,SAAS,CAACX,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAChE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}