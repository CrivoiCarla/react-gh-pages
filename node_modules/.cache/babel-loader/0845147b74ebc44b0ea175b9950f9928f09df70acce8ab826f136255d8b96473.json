{"ast":null,"code":"// import React, { useState } from \"react\";\n// import \"../css/Crash.css\";\n\n// const Crash = () => {\n//   const [currentBet, setCurrentBet] = useState(0);\n//   const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\n//   const [crashMultiplier, setCrashMultiplier] = useState(0);\n\n//   const handleBetChange = (event) => {\n//     setCurrentBet(parseInt(event.target.value));\n//   };\n\n//   const startGame = () => {\n//     setGameState(\"playing\");\n//     const randomMultiplier = Math.floor(Math.random() * 500) / 100 + 1;\n//     setCrashMultiplier(randomMultiplier);\n//     setTimeout(() => {\n//       setGameState(\"crashed\");\n//     }, 3000);\n//   };\n\n//   const resetGame = () => {\n//     setCurrentBet(0);\n//     setGameState(\"waiting\");\n//     setCrashMultiplier(0);\n//   };\n\n//   return (\n//     <div className=\"crash-container\">\n//       <h1 className=\"crash-title\">Crash</h1>\n//       <div className=\"crash-info\">\n//         <p>Current bet: {currentBet} bits</p>\n//         {gameState === \"waiting\" ? (\n//           <button className=\"crash-button\" onClick={startGame}>\n//             Start game\n//           </button>\n//         ) : (\n//           <p>Game state: {gameState}</p>\n//         )}\n//         {gameState === \"crashed\" && (\n//           <div>\n//             <p>Crash multiplier: {crashMultiplier.toFixed(2)}</p>\n//             <p>Win: {currentBet * crashMultiplier} bits</p>\n//             <button className=\"crash-button\" onClick={resetGame}>\n//               Play again\n//             </button>\n//           </div>\n//         )}\n//         {gameState === \"playing\" && (\n//           <div>\n//             <p>Multiplier: {crashMultiplier.toFixed(2)}</p>\n//             <button className=\"crash-button\" onClick={() => setGameState(\"crashed\")}>\n//               Cash out\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//       <div className=\"crash-bets\">\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10)}>\n//           +10\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 100)}>\n//           +100\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 1000)}>\n//           +1000\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10000)}>\n//           +10000\n//         </button>\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(0)}>\n//           Clear\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Crash;","map":{"version":3,"names":[],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Crash.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import \"../css/Crash.css\";\r\n\r\n// const Crash = () => {\r\n//   const [currentBet, setCurrentBet] = useState(0);\r\n//   const [gameState, setGameState] = useState(\"waiting\"); // \"waiting\", \"playing\", \"crashed\"\r\n//   const [crashMultiplier, setCrashMultiplier] = useState(0);\r\n\r\n//   const handleBetChange = (event) => {\r\n//     setCurrentBet(parseInt(event.target.value));\r\n//   };\r\n\r\n//   const startGame = () => {\r\n//     setGameState(\"playing\");\r\n//     const randomMultiplier = Math.floor(Math.random() * 500) / 100 + 1;\r\n//     setCrashMultiplier(randomMultiplier);\r\n//     setTimeout(() => {\r\n//       setGameState(\"crashed\");\r\n//     }, 3000);\r\n//   };\r\n\r\n//   const resetGame = () => {\r\n//     setCurrentBet(0);\r\n//     setGameState(\"waiting\");\r\n//     setCrashMultiplier(0);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"crash-container\">\r\n//       <h1 className=\"crash-title\">Crash</h1>\r\n//       <div className=\"crash-info\">\r\n//         <p>Current bet: {currentBet} bits</p>\r\n//         {gameState === \"waiting\" ? (\r\n//           <button className=\"crash-button\" onClick={startGame}>\r\n//             Start game\r\n//           </button>\r\n//         ) : (\r\n//           <p>Game state: {gameState}</p>\r\n//         )}\r\n//         {gameState === \"crashed\" && (\r\n//           <div>\r\n//             <p>Crash multiplier: {crashMultiplier.toFixed(2)}</p>\r\n//             <p>Win: {currentBet * crashMultiplier} bits</p>\r\n//             <button className=\"crash-button\" onClick={resetGame}>\r\n//               Play again\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//         {gameState === \"playing\" && (\r\n//           <div>\r\n//             <p>Multiplier: {crashMultiplier.toFixed(2)}</p>\r\n//             <button className=\"crash-button\" onClick={() => setGameState(\"crashed\")}>\r\n//               Cash out\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//       <div className=\"crash-bets\">\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10)}>\r\n//           +10\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 100)}>\r\n//           +100\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 1000)}>\r\n//           +1000\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(currentBet + 10000)}>\r\n//           +10000\r\n//         </button>\r\n//         <button className=\"crash-bet\" onClick={() => setCurrentBet(0)}>\r\n//           Clear\r\n//         </button>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Crash;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}