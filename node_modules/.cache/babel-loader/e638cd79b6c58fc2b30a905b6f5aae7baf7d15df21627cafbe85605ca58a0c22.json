{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Carla\\\\Desktop\\\\New folder - Copy\\\\my-react-app\\\\src\\\\components\\\\Roulette.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../css/Roulette.css\";\nimport { Wheel } from \"react-custom-roulette\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst options = [{\n  option: \"10$\",\n  style: {\n    backgroundColor: \"#FF0000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"Lose\",\n  style: {\n    backgroundColor: \"#000000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"2$\",\n  style: {\n    backgroundColor: \"#FF0000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"40$\",\n  style: {\n    backgroundColor: \"#000000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"10$\",\n  style: {\n    backgroundColor: \"#FF0000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"100$\",\n  style: {\n    backgroundColor: \"#000000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"20$\",\n  style: {\n    backgroundColor: \"#FF0000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"Lose\",\n  style: {\n    backgroundColor: \"#000000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"100$\",\n  style: {\n    backgroundColor: \"#FF0000\",\n    textColor: \"#fff\"\n  }\n}, {\n  option: \"1000$\",\n  style: {\n    backgroundColor: \"#008000\",\n    textColor: \"#fff\"\n  }\n}];\nfunction RoulettePage() {\n  _s();\n  const [mustSpin, setMustSpin] = useState(false);\n  const [prizeNumber, setPrizeNumber] = useState(0);\n  const fetchPrizeNumber = async () => {\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"text/plain\");\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        'Origin': \"https://pacanele.herokuapp.com\"\n      }\n    };\n    try {\n      const response = await fetch(\"https://pacanelephp.herokuapp.com/v1/spin\", requestOptions);\n      const result = await response.text();\n      console.log(result);\n      const parsedData = JSON.parse(result); // Parse the response text as JSON\n      const number = parsedData.number;\n      return number;\n    } catch (error) {\n      console.log(\"error\", error);\n      return 0;\n    }\n  };\n  const handleSpinClick = async () => {\n    if (!mustSpin) {\n      const newPrizeNumber = await fetchPrizeNumber();\n      console.log(newPrizeNumber);\n      setPrizeNumber(newPrizeNumber);\n      setMustSpin(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roulette\",\n      children: /*#__PURE__*/_jsxDEV(Wheel, {\n        mustStartSpinning: mustSpin,\n        prizeNumber: prizeNumber,\n        data: options,\n        onStopSpinning: () => {\n          setMustSpin(false);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSpinClick,\n      children: \"SPIN\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RoulettePage, \"58vZrOuB/e+QvyhPdLKQFzmUZcU=\");\n_c = RoulettePage;\nexport default RoulettePage;\nvar _c;\n$RefreshReg$(_c, \"RoulettePage\");","map":{"version":3,"names":["React","useState","useEffect","Wheel","jsxDEV","_jsxDEV","Fragment","_Fragment","options","option","style","backgroundColor","textColor","RoulettePage","_s","mustSpin","setMustSpin","prizeNumber","setPrizeNumber","fetchPrizeNumber","myHeaders","Headers","append","requestOptions","method","headers","response","fetch","result","text","console","log","parsedData","JSON","parse","number","error","handleSpinClick","newPrizeNumber","children","className","mustStartSpinning","data","onStopSpinning","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Carla/Desktop/New folder - Copy/my-react-app/src/components/Roulette.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../css/Roulette.css\";\r\nimport { Wheel } from \"react-custom-roulette\";\r\n\r\nconst options = [\r\n  { option: \"10$\", style: { backgroundColor: \"#FF0000\", textColor: \"#fff\" } },\r\n  { option: \"Lose\", style: { backgroundColor: \"#000000\", textColor: \"#fff\" } },\r\n  { option: \"2$\", style: { backgroundColor: \"#FF0000\", textColor: \"#fff\" } },\r\n  { option: \"40$\", style: { backgroundColor: \"#000000\", textColor: \"#fff\" } },\r\n  { option: \"10$\", style: { backgroundColor: \"#FF0000\", textColor: \"#fff\" } },\r\n  { option: \"100$\", style: { backgroundColor: \"#000000\", textColor: \"#fff\" } },\r\n  { option: \"20$\", style: { backgroundColor: \"#FF0000\", textColor: \"#fff\" } },\r\n  { option: \"Lose\", style: { backgroundColor: \"#000000\", textColor: \"#fff\" } },\r\n  { option: \"100$\", style: { backgroundColor: \"#FF0000\", textColor: \"#fff\" } },\r\n  { option: \"1000$\", style: { backgroundColor: \"#008000\", textColor: \"#fff\" } },\r\n];\r\n\r\nfunction RoulettePage() {\r\n  const [mustSpin, setMustSpin] = useState(false);\r\n  const [prizeNumber, setPrizeNumber] = useState(0);\r\n\r\n  \r\n  const fetchPrizeNumber = async () => {\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"text/plain\");\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Origin': \"https://pacanele.herokuapp.com\",\r\n      },\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\r\n        \"https://pacanelephp.herokuapp.com/v1/spin\",\r\n        requestOptions\r\n      );\r\n      const result = await response.text();\r\n      console.log(result);\r\n      \r\n      const parsedData = JSON.parse(result); // Parse the response text as JSON\r\n      const number = parsedData.number;\r\n      \r\n      return number;\r\n    } catch (error) {\r\n      console.log(\"error\", error);\r\n      return 0;\r\n    }\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleSpinClick = async () => {\r\n    if (!mustSpin) {\r\n      const newPrizeNumber = await fetchPrizeNumber();\r\n      console.log(newPrizeNumber)\r\n      setPrizeNumber(newPrizeNumber);\r\n      setMustSpin(true);\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"roulette\">\r\n        <Wheel\r\n          mustStartSpinning={mustSpin}\r\n          prizeNumber={prizeNumber}\r\n          data={options}\r\n          onStopSpinning={() => {\r\n            setMustSpin(false);\r\n          }}\r\n        />\r\n      </div>\r\n      <button onClick={handleSpinClick}>SPIN</button>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RoulettePage;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}